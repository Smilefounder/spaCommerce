@page "/rewardpoints/history"
@page "/rewardpoints/history/page/{pageNumber:int}"

@layout _ColumnsTwo
@attribute [Authorize]
@inject NavigationManager uriHelper
@inject IJSService jsService
@inject IWorkContext workContext
@inject IOrderModelFactory orderModelFactory
@inject IOrderProcessingService orderProcessingService
@inject RewardPointsSettings rewardPointsSettings

@code
{
    private CustomerRewardPointsModel Model { get; set; }
    [Parameter] public int pageNumber { get; set; }


    public RenderFragment LeftSection { get; set; } = builder =>
    {
        builder.OpenComponent<CustomerNavigation>(0);
        builder.AddAttribute(1, "SelectedTabId", (int)CustomerNavigationEnum.RewardPoints);
        builder.CloseComponent();
    };


    protected override async Task DataRequest()
    {
        if (!workContext.CurrentCustomer.IsRegistered())
        {
            await jsService.DisplayBarNotification(new[] { "The current user isn't registred." }, JSMessageType.Error);
            uriHelper.NavigateTo(Url.RouteUrl("HomePage"));
            return;
        }

        if (!rewardPointsSettings.Enabled)
        {
            uriHelper.NavigateTo(Url.RouteUrl("CustomerInfo"));
            return;
        }

        // todo need testing pagenumber (if added to queryparam)
        Model = orderModelFactory.PrepareCustomerRewardPoints(uriHelper.GetQueryParameterValues<int?>("pagenumber").FirstOrDefault());
    }
}


@if (needStub)
{
    <LoadingStub />
}
else if (Model != null && pageNumber >= 0)
{
    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-reward-points-page");

    <div class="page account-page reward-points-page">
        <div class="page-title">
            <h1>@T("Account.MyAccount") - @T("Account.RewardPoints")</h1>
        </div>
        <div class="page-body">
            <div class="reward-points-overview">
                <div class="current-balance">@T("RewardPoints.CurrentBalance", Model.RewardPointsBalance, Model.RewardPointsAmount)</div>
                @if (Model.MinimumRewardPointsBalance > 0)
                {
                    <div class="min-balance">@T("RewardPoints.MinimumBalance", Model.MinimumRewardPointsBalance, Model.MinimumRewardPointsAmount)</div>
                }
            </div>
            <div class="section reward-points-history">
                <div class="title">
                    <strong>@T("RewardPoints.History")</strong>
                </div>
                @if (Model.RewardPoints.Count > 0)
                {
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="20%" />
                                <col width="10%" />
                                <col width="10%" />
                                <col />
                                <col width="20%" />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="date">
                                        @T("RewardPoints.Fields.CreatedDate")
                                    </th>
                                    <th class="points">
                                        @T("RewardPoints.Fields.Points")
                                    </th>
                                    <th class="points-balance">
                                        @T("RewardPoints.Fields.PointsBalance")
                                    </th>
                                    <th class="message">
                                        @T("RewardPoints.Fields.Message")
                                    </th>
                                    <th class="endDate">
                                        @T("RewardPoints.Fields.EndDate")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.RewardPoints.Count; i++)
                                {
                                    var item = Model.RewardPoints[i];
                                    <tr class=@(i%2 == 0 ? "odd" : "even"))>
                                        <td class="date">
                                            @item.CreatedOn
                                        </td>
                                        <td class="points">
                                            @item.Points
                                        </td>
                                        <td class="points-balance">
                                            @item.PointsBalance
                                        </td>
                                        <td class="message">
                                            @item.Message
                                        </td>
                                        <td class="endDate">
                                            @item.EndDate
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="pager">
                        <Pager2 Model="Model.PagerModel" PageNumber="pageNumber" />
                    </div>
                }
                else
                {
                    <div class="no-data">
                        @T("RewardPoints.NoHistory")
                    </div>
                }
            </div>
        </div>
    </div>
}