@using Nop.Core.Domain.Catalog

@code{
    // todo implementation
    [Parameter] public IList<CustomerAttributeModel> Model { get; set; }
}

@if (Model == null)
{
    <LoadingStub />
}
else
{
    foreach (var attr in Model)
    {
        var controlId = $"customer_attribute_{attr.Id}";
        var textPrompt = attr.Name;

        <div class="inputs custom-attributes">
            <label>@textPrompt:</label>

            @switch (attr.AttributeControlType)
            {
                case AttributeControlType.DropdownList:
                    {
                        <select name="@(controlId)" id="@(controlId)">
                            @if (!attr.IsRequired)
                            {
                                <option value="0">---</option>
                            }
                            @foreach (var attributeValue in attr.Values)
                            {
                                <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                            }
                        </select>
                    }
                    break;
                case AttributeControlType.RadioList:
                    {
                        <ul class="option-list">
                            @foreach (var attributeValue in attr.Values)
                            {
                                <li>
                                    <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                    <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                                </li>
                            }
                        </ul>
                    }
                    break;
                case AttributeControlType.Checkboxes:
                case AttributeControlType.ReadonlyCheckboxes:
                    {
                        <ul class="option-list">
                            @foreach (var attributeValue in attr.Values)
                            {
                                <li>
                                    <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" disabled="@(attr.AttributeControlType==AttributeControlType.ReadonlyCheckboxes ? "disabled" : null)" />
                                    <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                                </li>
                            }
                        </ul>
                    }
                    break;
                case AttributeControlType.TextBox:
                    {
                        <input name="@(controlId)" type="text" class="textbox" id="@(controlId)" value="@attr.DefaultValue" />
                    }
                    break;
                case AttributeControlType.MultilineTextbox:
                    {
                        <textarea id="@(controlId)" name="@(controlId)">@attr.DefaultValue</textarea>
                    }
                    break;
                case AttributeControlType.Datepicker:
                case AttributeControlType.FileUpload:
                case AttributeControlType.ColorSquares:
                case AttributeControlType.ImageSquares:
                    {
                        //not support attribute type
                    }
                    break;
            }
            @if (attr.IsRequired)
            {
                <Required />
            }
        </div>
    }
}