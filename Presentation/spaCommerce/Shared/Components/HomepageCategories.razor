@inherits LazyLoadingSpaComponent
@inject ICatalogModelFactory catalogModelFactory

@code{

    private IList<CategoryModel> Model { get; set; }

    protected override Task DataRequest()
    {
     
        Model = catalogModelFactory.PrepareHomepageCategoryModels();
        return Task.CompletedTask;
    }
}

@if (needStub)
{
    <div class="category-grid home-page-category-grid">
        <div class="title">
            <strong>@T("HomePage.Categories")</strong>
        </div>
        <div class="item-grid">
            <LoadingStub></LoadingStub>
        </div>
    </div>
}
else if (Model!= null && Model.Count > 0)
{
    <div class="category-grid home-page-category-grid">
        <div class="title">
            <strong>@T("HomePage.Categories")</strong>
        </div>
        <div class="item-grid">
            @foreach (var item in Model)
            {
                <div class="item-box">
                    <div class="category-item">
                        <h2 class="title">
                            <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                @item.Name
                            </a>
                        </h2>
                        <div class="picture">
                            <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}