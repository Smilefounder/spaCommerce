@page "/customer/downloadableproducts"
@layout _ColumnsTwo
@inject ICustomerModelFactory customerModelFactory
@inject NavigationManager uriHelper
@inject IWorkContext workContext
@inject CustomerSettings customerSettings
@inject IJSService jsService

@code{
    private CustomerDownloadableProductsModel Model { get; set; }

    public RenderFragment LeftSection { get; set; } = _builder =>
    {
        _builder.OpenComponent<CustomerNavigation>(0);
        _builder.AddAttribute(1, "SelectedTabId", (int)CustomerNavigationEnum.Addresses);
        _builder.CloseComponent();
    };

    protected override async Task DataRequest()
    {
        if (!workContext.CurrentCustomer.IsRegistered())
        {
            await jsService.DisplayBarNotification(new[] { "The current user isn't registred." }, JSMessageType.Error);
            uriHelper.NavigateTo(Url.RouteUrl("HomePage"));
            return;
        }

        if (customerSettings.HideDownloadableProductsTab)
        {
            uriHelper.NavigateTo(Url.RouteUrl("CustomerInfo"));
            return;
        }

        Model = customerModelFactory.PrepareCustomerDownloadableProductsModel();
    }

}

@if (needStub)
{
    <LoadingStub />
}
else if (Model != null)
{
    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
    //page class
    Html.AppendPageCssClassParts("html-account-page");
    Html.AppendPageCssClassParts("html-downloadable-products-page");

    <div class="page account-page downloadable-products-page">
        <div class="page-title">
            <h1>@T("Account.MyAccount") - @T("Account.DownloadableProducts")</h1>
        </div>
        <div class="page-body">
            @if (Model.Items.Count > 0)
            {
                <div class="table-wrapper">
                    <table class="data-table">
                        <colgroup>
                            <col width="1" />
                            <col width="1" />
                            <col />
                            <col width="1" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th class="order">
                                    @T("DownloadableProducts.Fields.Order")
                                </th>
                                <th class="date">
                                    @T("DownloadableProducts.Fields.Date")
                                </th>
                                <th class="product">
                                    @T("DownloadableProducts.Fields.Product")
                                </th>
                                <th class="download">
                                    @T("DownloadableProducts.Fields.Download")
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.Items.Count; i++)
                            {
                                var item = Model.Items[i];
                                <tr class="@(i % 2== 0 ? "odd" : "even")">
                                    <td class="order">
                                        <a href="@Url.RouteUrl("OrderDetails", new { orderId = item.OrderId })">@item.CustomOrderNumber</a>
                                    </td>
                                    <td class="date">
                                        @item.CreatedOn.ToString("d")
                                    </td>
                                    <td class="product">
                                        <a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a>
                                        @if (!string.IsNullOrEmpty(item.ProductAttributes))
                                        {
                                            <div class="attributes">
                                                @((MarkupString)item.ProductAttributes)
                                            </div>
                                        }
                                    </td>
                                    <td class="download">
                                        @if (item.DownloadId > 0)
                                        {
                                            <div>
                                                <a href="@Url.RouteUrl("GetDownload", new { orderItemId = item.OrderItemGuid })">@T("DownloadableProducts.Fields.Download")</a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div>
                                                @T("DownloadableProducts.Fields.Download.NA")
                                            </div>
                                        }
                                        @if (item.LicenseId > 0)
                                        {
                                            <div>
                                                <a href="@Url.RouteUrl("GetLicense", new { orderItemId = item.OrderItemGuid })">@T("DownloadableProducts.Fields.DownloadLicense")</a>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="no-data">
                    @T("DownloadableProducts.NoItems")
                </div>
            }
        </div>
    </div>
}